name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run unit tests
      run: npm test
      
    - name: Run tests with coverage
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true
        
    - name: Run browser integration tests
      run: npm run test:browser

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check code formatting
      run: npx prettier --check .

  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Validate application structure
      run: |
        # Check that all required files exist
        test -f index.html
        test -f manifest.json
        test -f sw.js
        test -d js
        test -d pages
        test -d test
        
    - name: Check for common issues
      run: |
        # Check for console.log statements in production code (excluding test files)
        if grep -r "console\.log" js/ pages/ --exclude-dir=test; then
          echo "Warning: Found console.log statements in production code"
          exit 1
        fi
        
        # Verify ES6 module syntax
        if ! grep -q '"type": "module"' package.json; then
          echo "Error: package.json must have 'type': 'module' for ES6 modules"
          exit 1
        fi